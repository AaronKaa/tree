name: Release Tree

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/tree-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Package binary (Linux/macOS)
        if: matrix.goos != 'windows'
        run: |
          tar -czvf dist/tree-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C dist tree-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Package binary (Windows)
        if: matrix.goos == 'windows'
        run: |
          zip dist/tree-${{ matrix.goos }}-${{ matrix.goarch }}.zip dist/tree-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tree-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            dist/tree-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*/*
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
